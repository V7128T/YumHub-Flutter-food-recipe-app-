Widget _buildRecipeView(UserIngredientList userIngredientList) {
  return Stack(
    children: [
      ListView.builder(
        padding: const EdgeInsets.only(bottom: 70, top: 10),
        itemCount: userIngredientList.userRecipes.length,
        itemBuilder: (context, index) {
          final recipeId =
                userIngredientList.userRecipes.keys.elementAt(index);
            final recipe = userIngredientList.userRecipes[recipeId];
            if (recipe == null) return const SizedBox.shrink();

            final uniqueKey = ValueKey('recipe-$recipeId');

            bool areAllIngredientsSelected = recipe.extendedIngredients?.every(
                  (ingredient) =>
                      _selectedIngredients.contains(ingredient.uniqueId),
                ) ??
                false;
          return Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
            child: GestureDetector(
              onLongPress: () => _navigateToRecipeInfo(context, recipe.id.toString()),
              child: Dismissible(
                key: uniqueKey,
                  direction: DismissDirection.endToStart,
                  onDismissed: (_) {
                    final user = FirebaseAuth.instance.currentUser;
                    if (user != null) {
                      userIngredientList.clearRecipe(
                          user.uid, recipe.id.toString());
                      final newCount = userIngredientList.userRecipes.length;
                      context
                          .read<ProfileBloc>()
                          .add(UpdateRecipesCount(newCount));
                    }
                  },
                child: Card(
                  elevation: 2,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(12),
                  ),
                  child: ExpansionTile(
                    leading: ClipRRect(
                        borderRadius: BorderRadius.circular(8),
                        child: SizedBox(
                          width: 60,
                          height: 60,
                          child: CachedNetworkImage(
                            imageUrl: recipe.image ?? '',
                            fit: BoxFit.cover,
                            memCacheWidth: 157,
                            memCacheHeight: 147,
                            placeholder: (context, url) => Container(
                              color: Colors.grey.shade200,
                              child: const Center(
                                  child: CircularProgressIndicator()),
                            ),
                            errorWidget: (context, url, error) => Container(
                              color: Colors.grey.shade200,
                              child:
                                  const Icon(Icons.error, color: Colors.grey),
                            ),
                          ),
                        ),
                      ),
                    title: Text(
                      recipe.title ?? 'Unknown Recipe',
                      style: GoogleFonts.chivo(
                        textStyle: TextStyle(
                          fontSize: 16.0,
                          color: Colors.orange[800],
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                    ),
                    subtitle: Text(
                        'Added on ${_formatDate(recipe.dateAdded)}',
                        style: TextStyle(
                          color: Colors.grey.shade600,
                          fontSize: 12,
                        ),
                      ),
                      trailing: Checkbox(
                        value: areAllIngredientsSelected,
                        onChanged: (bool? value) {
                          setState(() {
                            if (value == true) {
                              _selectedIngredients.addAll(
                                recipe.extendedIngredients
                                        ?.map((i) => i.uniqueId) ??
                                    [],
                              );
                            } else {
                              _selectedIngredients.removeAll(
                                recipe.extendedIngredients
                                        ?.map((i) => i.uniqueId) ??
                                    [],
                              );
                            }
                          });
                        },
                      ),
                      children: recipe.extendedIngredients?.isEmpty ?? true
                          ? [
                              const ListTile(
                                  title: Text('No ingredients for this recipe'))
                            ]
                          : recipe.extendedIngredients!
                              .map((ingredient) =>
                                  _buildIngredientTile(ingredient, recipe))
                              .toList(),
                  ),
                ),
              ),
            ),
          );
        },
      ),
      if (_hasSelectedIngredients)
        Positioned(
          bottom: 20,
          left: 20,
          right: 20,
          child: ElevatedButton(
            onPressed: _addToShoppingList,
            style: ElevatedButton.styleFrom(
              primary: Colors.orange[800],
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(30),
              ),
              padding: const EdgeInsets.symmetric(vertical: 15),
            ),
            child: Text(
              "Add to Shopping List",
              style: GoogleFonts.chivo(
                textStyle: const TextStyle(
                  color: Colors.white,
                  fontSize: 16,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
          ),
        ),
    ],
  );
}